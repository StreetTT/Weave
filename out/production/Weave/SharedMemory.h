/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class SharedMemory */

#ifndef _Included_SharedMemory
#define _Included_SharedMemory
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     SharedMemory
 * Method:    AlocWeaveSharedBuffer
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_SharedMemory_AlocWeaveSharedBuffer
  (JNIEnv *, jclass);

/*
 * Class:     SharedMemory
 * Method:    GetMutexByteArray
 * Signature: (I)Ljava/nio/ByteBuffer;
 */
JNIEXPORT jobject JNICALL Java_SharedMemory_GetMutexByteArray
  (JNIEnv *, jclass, jint);

/*
 * Class:     SharedMemory
 * Method:    GetSignalArray
 * Signature: ()Ljava/nio/ByteBuffer;
 */
JNIEXPORT jobject JNICALL Java_SharedMemory_GetSignalArray
  (JNIEnv *, jclass);

/*
 * Class:     SharedMemory
 * Method:    FreeWeaveSharedBuffer
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_SharedMemory_FreeWeaveSharedBuffer
  (JNIEnv *, jclass);

/*
 * Class:     SharedMemory
 * Method:    ReleaseMutex
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_SharedMemory_ReleaseMutex
  (JNIEnv *, jclass, jlong);

/*
 * Class:     SharedMemory
 * Method:    WaitForMutex
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_SharedMemory_WaitForMutex
  (JNIEnv *, jclass, jlong);

/*
 * Class:     SharedMemory
 * Method:    CreateProcess
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_SharedMemory_CreateProcess
  (JNIEnv *, jclass, jstring);

/*
 * Class:     SharedMemory
 * Method:    CreateMutex
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_SharedMemory_CreateMutex
  (JNIEnv *, jclass);

/*
 * Class:     SharedMemory
 * Method:    WaitForMultipleMutex
 * Signature: ([JI)V
 */
JNIEXPORT void JNICALL Java_SharedMemory_WaitForMultipleMutex
  (JNIEnv *, jclass, jlongArray, jint);

#ifdef __cplusplus
}
#endif
#endif
